#!/bin/bash
export DBUS_SYSTEM_BUS_ADDRESS=unix:path=/host/run/dbus/system_bus_socket

name=$(sed 's/\"//g' <<< $NAME)
if [[ ! $name =~ ^([0-9A-F]{2}[:-]){5}([0-9A-F]{2})$ ]]; then exit 0; fi

action=$(expr "$ACTION" : "\([a-zA-Z]\+\).*")

CONNECTION_NOTIFY_VOLUME=$(</usr/src/connection_notify_volume)
SYSTEM_OUTPUT_VOLUME=$(</usr/src/system_output_volume)

case "$action" in
add)
    printf "discoverable off\npairable off\nexit\n" | bluetoothctl
    echo $NAME | tr -d '"' > /var/cache/bluetooth/reconnect_device  # Save the mac address of the last connected device (for reconnect after reboot)

    amixer -M sset PCM,0 $CONNECTION_NOTIFY_VOLUME% > /dev/null &
    amixer -M sset Digital,0 $CONNECTION_NOTIFY_VOLUME% > /dev/null &
    
    aplay -D hw:0,0 /usr/src/sounds/connect.wav > /dev/null 2>&1
    
    amixer -M sset PCM,0 $SYSTEM_OUTPUT_VOLUME% > /dev/null &
    amixer -M sset Digital,0 $SYSTEM_OUTPUT_VOLUME% > /dev/null &
    if [[ -z "$BLUETOOTH_SCRIPTS" ]]; then
      python /usr/src/bluetooth-scripts/bluetooth-connect
    fi
    ;;
remove)
    amixer -M sset PCM,0 $CONNECTION_NOTIFY_VOLUME% > /dev/null &
    amixer -M sset Digital,0 $CONNECTION_NOTIFY_VOLUME% > /dev/null &

    aplay -D hw:0,0 /usr/src/sounds/disconnect.wav > /dev/null 2>&1
    
    printf "discoverable on\npairable on\nexit\n" | bluetoothctl
    amixer -M sset PCM,0 $SYSTEM_OUTPUT_VOLUME% > /dev/null &
    amixer -M sset Digital,0 $SYSTEM_OUTPUT_VOLUME% > /dev/null &
	if [[ -z "$BLUETOOTH_SCRIPTS" ]]; then
      python /usr/src/bluetooth-scripts/bluetooth-disconnect
    fi
    ;;
esac
